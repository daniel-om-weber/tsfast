# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"obj_in_lst": "00_core.ipynb",
         "count_parameters": "00_core.ipynb",
         "get_hdf_files": "00_core.ipynb",
         "hdf_extensions": "00_core.ipynb",
         "apply_df_tfms": "00_core.ipynb",
         "CreateDict": "00_core.ipynb",
         "ValidClmContains": "00_core.ipynb",
         "ValidClmIs": "00_core.ipynb",
         "FilterClm": "00_core.ipynb",
         "get_hdf_seq_len": "00_core.ipynb",
         "df_get_hdf_seq_len": "00_core.ipynb",
         "DfHDFGetSeqLen": "00_core.ipynb",
         "DfHDFCreateWindows": "00_core.ipynb",
         "DfFilterQuery": "00_core.ipynb",
         "DfDropClmExcept": "00_core.ipynb",
         "DfHDFCreateSamples": "00_core.ipynb",
         "calc_shift_offsets": "00_core.ipynb",
         "running_mean": "00_core.ipynb",
         "downsample_mean": "00_core.ipynb",
         "hdf_extract_sequence": "00_core.ipynb",
         "Memoize": "00_core.ipynb",
         "HDF2Sequence": "00_core.ipynb",
         "hdf2scalars": "00_core.ipynb",
         "TensorSequences": "00_core.ipynb",
         "TensorSequencesInput": "00_core.ipynb",
         "TensorSequencesOutput": "00_core.ipynb",
         "toTensorSequencesInput": "00_core.ipynb",
         "toTensorSequencesOutput": "00_core.ipynb",
         "TensorScalars": "00_core.ipynb",
         "TensorScalarsInput": "00_core.ipynb",
         "TensorScalarsOutput": "00_core.ipynb",
         "SeqSlice": "00_core.ipynb",
         "SeqNoiseInjection": "00_core.ipynb",
         "SeqNoiseInjection_Varying": "00_core.ipynb",
         "SeqNoiseInjection_Grouped": "00_core.ipynb",
         "SeqBiasInjection": "00_core.ipynb",
         "encodes": "00_core.ipynb",
         "decodes": "00_core.ipynb",
         "ParentSplitter": "00_core.ipynb",
         "PercentageSplitter": "00_core.ipynb",
         "ApplyToDict": "00_core.ipynb",
         "valid_clm_splitter": "00_core.ipynb",
         "pad_sequence": "00_core.ipynb",
         "SequenceBlock": "00_core.ipynb",
         "Seq2SeqDS": "00_core.ipynb",
         "Seq2SeqDataloaders": "00_core.ipynb",
         "plot_sequence": "00_core.ipynb",
         "plot_seqs_single_figure": "00_core.ipynb",
         "plot_seqs_multi_figures": "00_core.ipynb",
         "BatchNorm_1D_Stateful": "01_models.ipynb",
         "SeqLinear": "01_models.ipynb",
         "RNN": "01_models.ipynb",
         "Sequential_RNN": "01_models.ipynb",
         "SimpleRNN": "01_models.ipynb",
         "ResidualBlock_RNN": "01_models.ipynb",
         "SimpleResidualRNN": "01_models.ipynb",
         "DenseLayer_RNN": "01_models.ipynb",
         "DenseBlock_RNN": "01_models.ipynb",
         "DenseNet_RNN": "01_models.ipynb",
         "SeperateRNN": "01_models.ipynb",
         "CausalConv1d": "01_models.ipynb",
         "CConv1D": "01_models.ipynb",
         "TCN_Block": "01_models.ipynb",
         "TCN": "01_models.ipynb",
         "SeperateTCN": "01_models.ipynb",
         "CRNN": "01_models.ipynb",
         "SeperateCRNN": "01_models.ipynb",
         "Normalizer1D": "01_models.ipynb",
         "AR_Model": "01_models.ipynb",
         "AR_RNN": "01_models.ipynb",
         "IndRNN_CODE": "01a_IndRNN.ipynb",
         "IndRNN_Compute_GPU": "01a_IndRNN.ipynb",
         "IndRNN_onlyrecurrent": "01a_IndRNN.ipynb",
         "Linear_overtime_module": "01a_IndRNN.ipynb",
         "IndRNN": "01a_IndRNN.ipynb",
         "IndRNNRegularizer": "01a_IndRNN.ipynb",
         "GradientClipping": "02_learner.ipynb",
         "WeightClipping": "02_learner.ipynb",
         "SkipFirstNCallback": "02_learner.ipynb",
         "VarySeqLen": "02_learner.ipynb",
         "TimeSeriesRegularizer": "02_learner.ipynb",
         "ARInitCB": "02_learner.ipynb",
         "plot_grad_flow": "02_learner.ipynb",
         "CB_PlotGradient": "02_learner.ipynb",
         "ignore_nan": "02_learner.ipynb",
         "mse_nan": "02_learner.ipynb",
         "float64_func": "02_learner.ipynb",
         "SkipNLoss": "02_learner.ipynb",
         "fun_rmse": "02_learner.ipynb",
         "norm_rmse": "02_learner.ipynb",
         "mean_vaf": "02_learner.ipynb",
         "get_inp_out_size": "02_learner.ipynb",
         "RNNLearner": "02_learner.ipynb",
         "TCNLearner": "02_learner.ipynb",
         "CRNNLearner": "02_learner.ipynb",
         "AR_TCNLearner": "02_learner.ipynb",
         "AR_RNNLearner": "02_learner.ipynb",
         "TbpttDl": "03_dataloaders.ipynb",
         "reset_model_state": "03_dataloaders.ipynb",
         "TbpttResetCB": "03_dataloaders.ipynb",
         "WeightedDL_Factory": "03_dataloaders.ipynb",
         "uniform_p_of_category": "03_dataloaders.ipynb",
         "uniform_p_of_float": "03_dataloaders.ipynb",
         "uniform_p_of_float_with_gaps": "03_dataloaders.ipynb",
         "BatchLimit_Factory": "03_dataloaders.ipynb",
         "ProDiagTrainer": "11_dualrnn.ipynb",
         "DualRNN": "11_dualrnn.ipynb",
         "DualCRNN": "11_dualrnn.ipynb",
         "TensorQuaternionInclination": "12_TensorQuaternions.ipynb",
         "TensorQuaternionAngle": "12_TensorQuaternions.ipynb",
         "rad2deg": "12_TensorQuaternions.ipynb",
         "multiplyQuat": "12_TensorQuaternions.ipynb",
         "norm_quaternion": "12_TensorQuaternions.ipynb",
         "conjQuat": "12_TensorQuaternions.ipynb",
         "diffQuat": "12_TensorQuaternions.ipynb",
         "relativeQuat": "12_TensorQuaternions.ipynb",
         "safe_acos": "12_TensorQuaternions.ipynb",
         "safe_acos_double": "12_TensorQuaternions.ipynb",
         "inclinationAngle": "12_TensorQuaternions.ipynb",
         "relativeAngle": "12_TensorQuaternions.ipynb",
         "rollAngle": "12_TensorQuaternions.ipynb",
         "pitchAngle": "12_TensorQuaternions.ipynb",
         "inclinationAngleAbs": "12_TensorQuaternions.ipynb",
         "rand_quat": "12_TensorQuaternions.ipynb",
         "rot_vec": "12_TensorQuaternions.ipynb",
         "quatFromAngleAxis": "12_TensorQuaternions.ipynb",
         "quatInterp": "12_TensorQuaternions.ipynb",
         "inclination_loss": "12_TensorQuaternions.ipynb",
         "inclination_loss_abs": "12_TensorQuaternions.ipynb",
         "inclination_loss_squared": "12_TensorQuaternions.ipynb",
         "inclination_loss_smooth": "12_TensorQuaternions.ipynb",
         "abs_inclination": "12_TensorQuaternions.ipynb",
         "ms_inclination": "12_TensorQuaternions.ipynb",
         "rms_inclination": "12_TensorQuaternions.ipynb",
         "smooth_inclination": "12_TensorQuaternions.ipynb",
         "rms_inclination_deg": "12_TensorQuaternions.ipynb",
         "rms_pitch_deg": "12_TensorQuaternions.ipynb",
         "rms_roll_deg": "12_TensorQuaternions.ipynb",
         "mean_inclination_deg": "12_TensorQuaternions.ipynb",
         "angle_loss": "12_TensorQuaternions.ipynb",
         "angle_loss_opt": "12_TensorQuaternions.ipynb",
         "ms_rel_angle": "12_TensorQuaternions.ipynb",
         "rms_rel_angle_deg": "12_TensorQuaternions.ipynb",
         "mean_rel_angle_deg": "12_TensorQuaternions.ipynb",
         "deg_rmse": "12_TensorQuaternions.ipynb",
         "QuaternionRegularizer": "12_TensorQuaternions.ipynb",
         "augmentation_groups": "12_TensorQuaternions.ipynb",
         "QuaternionAugmentation": "12_TensorQuaternions.ipynb",
         "Quaternion_ResamplingModel": "12_TensorQuaternions.ipynb",
         "relativeQuat_np": "12_TensorQuaternions.ipynb",
         "quatFromAngleAxis_np": "12_TensorQuaternions.ipynb",
         "multiplyQuat_np": "12_TensorQuaternions.ipynb",
         "quatInterp_np": "12_TensorQuaternions.ipynb",
         "HDF2Quaternion": "12_TensorQuaternions.ipynb",
         "QuaternionBlock": "12_TensorQuaternions.ipynb",
         "TensorInclination": "12_TensorQuaternions.ipynb",
         "HDF2Inclination": "12_TensorQuaternions.ipynb",
         "InclinationBlock": "12_TensorQuaternions.ipynb",
         "plot_scalar_inclination": "12_TensorQuaternions.ipynb",
         "plot_quaternion_inclination": "12_TensorQuaternions.ipynb",
         "plot_quaternion_rel_angle": "12_TensorQuaternions.ipynb",
         "log_uniform": "13_HPOpt.ipynb",
         "LearnerTrainable": "13_HPOpt.ipynb",
         "CBRaySaveModel": "13_HPOpt.ipynb",
         "learner_optimize": "13_HPOpt.ipynb",
         "sample_config": "13_HPOpt.ipynb",
         "CBRayReporter": "13_HPOpt.ipynb",
         "HPOptimizer": "13_HPOpt.ipynb"}

modules = ["core.py",
           "models/core.py",
           "models/indrnn.py",
           "learner.py",
           "dataloaders.py",
           "dualrnn.py",
           "quaternions.py",
           "hpopt.py"]

doc_url = "https://daniel-om-weber.github.io/seqdata/"

git_url = "https://github.com/daniel-om-weber/seqdata/tree/master/"

def custom_doc_links(name): return None
